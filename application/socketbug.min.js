/* ========== BEGIN THRID PARTY DEGUG CODE ========== */

/**
 * JavaScript Debug - v0.4 - 6/22/2010
 * http://benalman.com/projects/javascript-debug-console-log/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 * 
 * With lots of help from Paul Irish!
 * http://paulirish.com/
 */
if(typeof(debug)==='undefined'){window.debug=(function(){var i=this,b=Array.prototype.slice,d=i.console,h={},f,g,m=9,c=["error","warn","info","debug","log"],l="assert clear count dir dirxml exception group groupCollapsed groupEnd profile profileEnd table time timeEnd trace".split(" "),j=l.length,a=[];while(--j>=0){(function(n){h[n]=function(){m!==0&&d&&d[n]&&d[n].apply(d,arguments)}})(l[j])}j=c.length;while(--j>=0){(function(n,o){h[o]=function(){var q=b.call(arguments),p=[o].concat(q);a.push(p);e(p);if(!d||!k(n)){return}d.firebug?d[o].apply(i,q):d[o]?d[o](q):d.log(q)}})(j,c[j])}function e(n){if(f&&(g||!d||!d.log)){f.apply(i,n)}}h.setLevel=function(n){m=typeof n==="number"?n:9};function k(n){return m>0?m>n:c.length+m<=n}h.setCallback=function(){var o=b.call(arguments),n=a.length,p=n;f=o.shift()||null;g=typeof o[0]==="boolean"?o.shift():false;p-=typeof o[0]==="number"?o.shift():n;while(p<n){e(a[p++])}};return h})();}

/* ========== BEGIN SOCKETBUG APPLICATION CODE ========== */

/**
 * Socketbug - Web Socket Remote Debugging
 *
 * @version v0.1.0 ( 6/20/2011 )
 *
 * @link Website: http://www.socketbug.com
 * @link Twitter: http://www.twitter.com/socketbug_dev
 * @link Source: http://github.com/manifestinteractive/socketbug
 * @link Support & Feature Requests: http://socketbug.userecho.com
 * 
 * @copyright Copyright (c) 2011 Manifest Interactive, LLC
 *
 * @license Licensed under the LGPL v3 licenses.
 */
eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c])}}return p}('m(s(3)===\'15\'){l 3={d:9,p:1p,7:1i 7.1s(4.1k,{O:4.O,1g:9}),8:5(u,E){M(E){o\'w\':t.w(u);n;o\'y\':t.y(u);n;1h:t.8(u)}},z:5(E){l P=1l.1m.1r.1q(1o,1);j={\'G\':\'z\',\'r\':\'C\',\'h\':4.h,\'f\':4.f,\'e\':4.e,\'k\':4.k,\'1f\':E,\'16\':P};3.j(j)},x:5(){v.7.x()},B:5(){v.7.B()},j:5(6){v.7.j(6)}};3.7.a(\'14\',5(H){3.8(\'12 b x b c Y \'+H+\'...\');3.d=9});3.7.a(\'x\',5(){3.8(\'c 13\');3.d=I;l V={\'17\':I,\'r\':\'C\',\'h\':4.h,\'f\':4.f,\'e\':4.e,\'k\':4.k};3.j(V);m(4.K&&s(4.K)==="5"){4.K()}});3.7.a(\'1c\',5(){3.8(\'Q b 1b b c\',\'y\');3.d=9;3.B()});3.7.a(\'u\',5(6){M(s(6)){o\'1a\':m(6.1n(0,10)==\'1M:\'){l L=6.1t(\':\',2);3.8(\'c 1K 1J: \'+L[1]);3.p=L[1]}n;o\'1N\':M(6.G){o\'W\':m(6.r==\'t\'){3.8(\'S 1R:&1Q; <U 1P="1I">\'+6.q+\'</U>\');l F={\'p\':v.p,\'r\':\'C\',\'h\':4.h,\'f\':4.f,\'e\':4.e,\'k\':4.k,\'G\':\'W\',\'q\':6.q};3.j(A.X(A.11(F)));T(6.q)}n;o\'i\':m(6.r==\'t\'){3.8(\'S 1x 1w 1u 1v\');T(\'l i = \'+6.q);i=i.R(/</g,\'&1B;\');i=i.R(/>/g,\'&1G;\');l F={\'p\':v.p,\'r\':\'C\',\'h\':4.h,\'f\':4.f,\'e\':4.e,\'k\':4.k,\'G\':\'i\',\'q\':\'\',\'1F\':i};3.j(A.X(A.11(F)))}n}n}m(4.J&&s(4.J)==="5"){4.J(6)}});3.7.a(\'1O\',5(){3.8(\'19 b c 1d\',\'w\');3.d=9});3.7.a(\'B\',5(){3.8(\'c 18\',\'w\');3.d=9;m(4.N&&s(4.N)==="5"){4.N()}});3.7.a(\'1j\',5(H,D){3.8(\'1y 1e b c Y \'+H+\' 1S Z #\'+D);3.d=9});3.7.a(\'1H\',5(1A,D){3.8(\'Z #\'+D+\' 1E 1D b c...\',\'w\');3.d=9});3.7.a(\'1L\',5(){3.8(\'Q b 1C b c\',\'y\');3.d=9});(5(){3.x();z.1z(3.z,I)})()}',62,117,'|||socketbug|_0|function|data|io|log|false|on|to|Socketbug|connected|group_id|application_name||application_id|src|send|group_name|var|if|break|case|session_id|js|mode|typeof|console|message|this|warn|connect|error|debug|JSON|disconnect|application|reconnectionAttempts|level|json|command|transport_type|true|message_callback|connect_callback|sid|switch|disconnect_callback|port|args|Failed|replace|Received|eval|span|setup|javascript|parse|via|Attempt||stringify|Attempting|Connected|connecting|undefined|debug_message|init|Disconnected|Connection|string|Connect|connect_failed|Closed|Reconnected|debug_level|rememberTransport|default|new|reconnect|host|Array|prototype|substring|arguments|null|call|slice|Socket|split|Source|Code|for|Request|Successfully|setCallback|reconnectionDelay|lt|Reconnect|Reconnecting|at|html_code|gt|reconnecting|value|ID|Session|reconnect_failed|sessionid|object|close|class|nbsp|Javascript|with'.split('|'),0,{}));